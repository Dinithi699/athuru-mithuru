import React, { useState, useEffect } from 'react';
import { getUserGameHistory } from '../firebase/firestore';

const AdminUserProfile = ({ user, onBack, admin }) => {
  const [gameHistory, setGameHistory] = useState([]);
  const [loading, setLoading] = useState(true);
  const [activeTab, setActiveTab] = useState('overview');

  useEffect(() => {
    const fetchGameHistory = async () => {
      if (user?.uid) {
        const result = await getUserGameHistory(user.uid);
        if (result.success) {
          setGameHistory(result.data);
        }
      }
      setLoading(false);
    };

    fetchGameHistory();
  }, [user]);

  const calculateRiskLevel = () => {
    if (gameHistory.length === 0) return { level: 'unknown', color: 'gray', text: '‡∂±‡∑ú‡∂Ø‡∂±‡∑ä‡∂±‡∑è' };

    const averageScore = gameHistory.reduce((sum, game) => sum + (game.score || 0), 0) / gameHistory.length;
    const averageAccuracy = gameHistory.reduce((sum, game) => sum + (game.accuracy || 0), 0) / gameHistory.length;

    if (averageScore < 50 || averageAccuracy < 60) {
      return { level: 'high', color: 'red', text: '‡∂â‡∑Ñ‡∑Ö ‡∂Ö‡∑Ä‡∂Ø‡∑è‡∂±‡∂∏' };
    }
    if (averageScore < 70 || averageAccuracy < 75) {
      return { level: 'medium', color: 'orange', text: '‡∂∏‡∂∞‡∑ä‚Äç‡∂∫‡∂∏ ‡∂Ö‡∑Ä‡∂Ø‡∑è‡∂±‡∂∏' };
    }
    return { level: 'low', color: 'green', text: '‡∂Ö‡∂©‡∑î ‡∂Ö‡∑Ä‡∂Ø‡∑è‡∂±‡∂∏' };
  };

  const getGameTypeInSinhala = (gameType) => {
    const gameTypes = {
      'Dysgraphia': '‡∂Ö‡∂ö‡∑î‡∂ª‡∑î ‡∂Ω‡∑í‡∑Ä‡∑ì‡∂∏',
      'Dyspraxia': '‡∂≠‡∂ª‡∑î ‡∂ª‡∂ß‡∑è',
      'Dyscalculia': '‡∑É‡∂Ç‡∂õ‡∑ä‚Äç‡∂∫‡∑è ‡∑É‡∂Ç‡∑É‡∂±‡∑ä‡∂Ø‡∂±‡∂∫',
      'Dyslexia': '‡∂Ø‡∑ò‡∑Å‡∑ä‚Äç‡∂∫ ‡∑Ä‡∑ô‡∂±‡∑É‡∑ä‡∂ö‡∂∏‡∑ä'
    };
    return gameTypes[gameType] || gameType;
  };

  const getRecommendations = (riskLevel) => {
    switch (riskLevel.level) {
      case 'high':
        return [
          '‡∑Ä‡∑ò‡∂≠‡∑ä‡∂≠‡∑ì‡∂∫ ‡∂∏‡∂±‡∑ù‡∑Ä‡∑í‡∂Ø‡∑ä‚Äç‡∂∫‡∑è‡∂•‡∂∫‡∑ô‡∂ö‡∑î ‡∑Ñ‡∂∏‡∑î‡∑Ä‡∂±‡∑ä‡∂±',
          '‡∑Ä‡∑í‡∑Å‡∑ö‡∑Ç ‡∂Ö‡∂∞‡∑ä‚Äç‡∂∫‡∑è‡∂¥‡∂± ‡∑É‡∑Ñ‡∑è‡∂∫ ‡∂Ω‡∂∂‡∑è‡∂ú‡∂±‡∑ä‡∂±',
          '‡∂Ø‡∑õ‡∂±‡∑í‡∂ö ‡∂Ö‡∂∑‡∑ä‚Äç‡∂∫‡∑è‡∑É ‡∂ö‡∑è‡∂ª‡∑ä‡∂∫‡∂ö‡∑ä‚Äç‡∂ª‡∂∏‡∂∫‡∂ö‡∑ä ‡∂Ü‡∂ª‡∂∏‡∑ä‡∂∑ ‡∂ö‡∂ª‡∂±‡∑ä‡∂±',
          '‡∂Ø‡∑ô‡∂∏‡∑è‡∂¥‡∑í‡∂∫‡∂±‡∑ä ‡∑É‡∂∏‡∂ü ‡∑É‡∑è‡∂ö‡∂†‡∑ä‡∂°‡∑è ‡∂ö‡∂ª‡∂±‡∑ä‡∂±',
          '‡∂¥‡∑ä‚Äç‡∂ª‡∂ú‡∂≠‡∑í‡∂∫ ‡∑É‡∂≠‡∑í‡∂¥‡∂≠‡∑è ‡∂±‡∑í‡∂ª‡∑ì‡∂ö‡∑ä‡∑Ç‡∂´‡∂∫ ‡∂ö‡∂ª‡∂±‡∑ä‡∂±'
        ];
      case 'medium':
        return [
          '‡∂Ö‡∂∏‡∂≠‡∂ª ‡∂Ö‡∂∑‡∑ä‚Äç‡∂∫‡∑è‡∑É ‡∂ö‡∑è‡∂Ω‡∂∫ ‡∂Ω‡∂∂‡∑è‡∂Ø‡∑ô‡∂±‡∑ä‡∂±',
          '‡∂¥‡∑ä‚Äç‡∂ª‡∂ú‡∂≠‡∑í‡∂∫ ‡∂∏‡∑è‡∑É‡∑í‡∂ö‡∑Ä ‡∂±‡∑í‡∂ª‡∑ì‡∂ö‡∑ä‡∑Ç‡∂´‡∂∫ ‡∂ö‡∂ª‡∂±‡∑ä‡∂±',
          '‡∂Ø‡∑ô‡∂∏‡∑è‡∂¥‡∑í‡∂∫‡∂±‡∑ä‡∂ß ‡∂Ø‡∑ê‡∂±‡∑î‡∂∏‡∑ä ‡∂Ø‡∑ô‡∂±‡∑ä‡∂±',
          '‡∑É‡∂∏‡∑ñ‡∑Ñ ‡∂ö‡∑ä‚Äç‡∂ª‡∑í‡∂∫‡∑è‡∂ö‡∑è‡∂ª‡∂ö‡∂∏‡∑ä‡∑Ä‡∂Ω‡∂ß ‡∂Ø‡∑í‡∂ª‡∑í‡∂∏‡∂≠‡∑ä ‡∂ö‡∂ª‡∂±‡∑ä‡∂±',
          '‡∂∞‡∂±‡∑è‡∂≠‡∑ä‡∂∏‡∂ö ‡∂¥‡∑ä‚Äç‡∂ª‡∂≠‡∑í‡∂¥‡∑ù‡∑Ç‡∂´ ‡∂Ω‡∂∂‡∑è‡∂Ø‡∑ô‡∂±‡∑ä‡∂±'
        ];
      case 'low':
        return [
          '‡∑Ä‡∂ª‡∑ä‡∂≠‡∂∏‡∑è‡∂± ‡∂¥‡∑ä‚Äç‡∂ª‡∂ú‡∂≠‡∑í‡∂∫ ‡∂Ø‡∑í‡∂ú‡∂ß‡∂∏ ‡∂ö‡∂ª‡∂ú‡∑ô‡∂± ‡∂∫‡∂±‡∑ä‡∂±',
          '‡∂Ö‡∂∑‡∑í‡∂∫‡∑ù‡∂ú‡∑è‡∂≠‡∑ä‡∂∏‡∂ö ‡∂ö‡∑ä‚Äç‡∂ª‡∑í‡∂∫‡∑è‡∂ö‡∑è‡∂ª‡∂ö‡∂∏‡∑ä ‡∂Ω‡∂∂‡∑è‡∂Ø‡∑ô‡∂±‡∑ä‡∂±',
          '‡∂Ö‡∂±‡∑ô‡∂ö‡∑ä ‡∑Ö‡∂∏‡∑î‡∂±‡∑ä‡∂ß ‡∂ã‡∂Ø‡∑Ä‡∑ä ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏‡∂ß ‡∂Ø‡∑í‡∂ª‡∑í‡∂∏‡∂≠‡∑ä ‡∂ö‡∂ª‡∂±‡∑ä‡∂±',
          '‡∂±‡∑í‡∂ª‡∑ä‡∂∏‡∑è‡∂´‡∑Å‡∑ì‡∂Ω‡∑ì ‡∂ö‡∑ä‚Äç‡∂ª‡∑í‡∂∫‡∑è‡∂ö‡∑è‡∂ª‡∂ö‡∂∏‡∑ä‡∑Ä‡∂Ω‡∂ß ‡∂Ø‡∑í‡∂ª‡∑í‡∂∏‡∂≠‡∑ä ‡∂ö‡∂ª‡∂±‡∑ä‡∂±'
        ];
      default:
        return [
          '‡∂ö‡∑ä‚Äç‡∂ª‡∑ì‡∂©‡∑è ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏‡∂ß ‡∂Ø‡∑í‡∂ª‡∑í‡∂∏‡∂≠‡∑ä ‡∂ö‡∂ª‡∂±‡∑ä‡∂±',
          '‡∂¥‡∑ä‚Äç‡∂ª‡∂ú‡∂≠‡∑í‡∂∫ ‡∂±‡∑í‡∂ª‡∑ì‡∂ö‡∑ä‡∑Ç‡∂´‡∂∫ ‡∂ö‡∂ª‡∂±‡∑ä‡∂±'
        ];
    }
  };

  const riskLevel = calculateRiskLevel();

  return (
    <div className="min-h-screen bg-gradient-to-b from-blue-900 via-blue-700 to-blue-500">
      {/* Header */}
      <header className="bg-white/10 backdrop-blur-sm border-b border-white/20 p-4 sm:p-6">
        <div className="flex items-center justify-between">
          <div className="flex items-center gap-4">
            <button
              onClick={onBack}
              className="bg-white/20 hover:bg-white/30 text-white px-4 py-2 rounded-full font-bold transition-colors duration-300"
            >
              ‚Üê ‡∂Ü‡∂¥‡∑É‡∑î
            </button>
            <div>
              <h1 className="text-2xl sm:text-3xl font-bold text-white">
                {user?.name || '‡∂±‡∂∏ ‡∂±‡∑ê‡∂≠'}
              </h1>
              <p className="text-white/80">{user?.email}</p>
            </div>
          </div>
          <div className={`px-4 py-2 rounded-full text-white font-bold bg-${riskLevel.color}-500`}>
            {riskLevel.text}
          </div>
        </div>
      </header>

      {/* Navigation Tabs */}
      <div className="p-4 sm:p-6">
        <div className="bg-white/10 backdrop-blur-sm rounded-2xl p-2 mb-6">
          <div className="flex gap-2">
            <button
              onClick={() => setActiveTab('overview')}
              className={`flex-1 px-4 py-2 rounded-xl font-bold transition-colors duration-300 ${
                activeTab === 'overview' 
                  ? 'bg-white text-blue-600' 
                  : 'text-white hover:bg-white/20'
              }`}
            >
              ‡∑É‡∑è‡∂∏‡∑è‡∂±‡∑ä‚Äç‡∂∫ ‡∑Ä‡∑í‡∑É‡∑ä‡∂≠‡∂ª
            </button>
            <button
              onClick={() => setActiveTab('games')}
              className={`flex-1 px-4 py-2 rounded-xl font-bold transition-colors duration-300 ${
                activeTab === 'games' 
                  ? 'bg-white text-blue-600' 
                  : 'text-white hover:bg-white/20'
              }`}
            >
              ‡∂ö‡∑ä‚Äç‡∂ª‡∑ì‡∂©‡∑è ‡∂â‡∂≠‡∑í‡∑Ñ‡∑è‡∑É‡∂∫
            </button>
            <button
              onClick={() => setActiveTab('recommendations')}
              className={`flex-1 px-4 py-2 rounded-xl font-bold transition-colors duration-300 ${
                activeTab === 'recommendations' 
                  ? 'bg-white text-blue-600' 
                  : 'text-white hover:bg-white/20'
              }`}
            >
              ‡∂±‡∑í‡∂ª‡∑ä‡∂Ø‡∑ö‡∑Å
            </button>
          </div>
        </div>

        {/* Tab Content */}
        {activeTab === 'overview' && (
          <div className="space-y-6">
            {/* User Info */}
            <div className="bg-white/10 backdrop-blur-sm rounded-2xl p-6">
              <h2 className="text-xl font-bold text-white mb-4">‡∂¥‡∂ª‡∑í‡∑Å‡∑ì‡∂Ω‡∂ö ‡∑Ä‡∑í‡∑É‡∑ä‡∂≠‡∂ª</h2>
              <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-4">
                <div className="bg-white/10 rounded-lg p-4">
                  <div className="text-white/60 text-sm">‡∂±‡∂∏</div>
                  <div className="text-white font-bold">{user?.name || '‡∂±‡∂∏ ‡∂±‡∑ê‡∂≠'}</div>
                </div>
                <div className="bg-white/10 rounded-lg p-4">
                  <div className="text-white/60 text-sm">‡∂ä‡∂∏‡∑ö‡∂Ω‡∑ä</div>
                  <div className="text-white font-bold text-sm">{user?.email || '‡∂ä‡∂∏‡∑ö‡∂Ω‡∑ä ‡∂±‡∑ê‡∂≠'}</div>
                </div>
                <div className="bg-white/10 rounded-lg p-4">
                  <div className="text-white/60 text-sm">‡∂Ø‡∑î‡∂ª‡∂ö‡∂Æ‡∂±</div>
                  <div className="text-white font-bold">{user?.mobile || '‡∂±‡∑ê‡∂≠'}</div>
                </div>
                <div className="bg-white/10 rounded-lg p-4">
                  <div className="text-white/60 text-sm">‡∂Ω‡∑í‡∂∫‡∑è‡∂¥‡∂Ø‡∑í‡∂Ç‡∂†‡∑í ‡∂Ø‡∑í‡∂±‡∂∫</div>
                  <div className="text-white font-bold text-sm">
                    {user?.createdAt ? new Date(user.createdAt).toLocaleDateString('si-LK') : '‡∂±‡∑ú‡∂Ø‡∂±‡∑ä‡∂±‡∑è'}
                  </div>
                </div>
              </div>
            </div>

            {/* Performance Stats */}
            <div className="bg-white/10 backdrop-blur-sm rounded-2xl p-6">
              <h2 className="text-xl font-bold text-white mb-4">‡∂ö‡∑è‡∂ª‡∑ä‡∂∫ ‡∑É‡∑è‡∂∞‡∂± ‡∑É‡∂Ç‡∂õ‡∑ä‚Äç‡∂∫‡∑è‡∂Ω‡∑ö‡∂õ‡∂±</h2>
              <div className="grid grid-cols-2 sm:grid-cols-4 gap-4">
                <div className="bg-white/10 rounded-lg p-4 text-center">
                  <div className="text-2xl font-bold text-white">{user?.points || 0}</div>
                  <div className="text-white/60 text-sm">‡∂∏‡∑î‡∑Ö‡∑î ‡∂Ω‡∂ö‡∑î‡∂´‡∑î</div>
                </div>
                <div className="bg-white/10 rounded-lg p-4 text-center">
                  <div className="text-2xl font-bold text-white">{user?.completedGames || 0}</div>
                  <div className="text-white/60 text-sm">‡∑É‡∂∏‡∑ä‡∂¥‡∑ñ‡∂ª‡∑ä‡∂´ ‡∂ö‡∑ä‚Äç‡∂ª‡∑ì‡∂©‡∑è</div>
                </div>
                <div className="bg-white/10 rounded-lg p-4 text-center">
                  <div className="text-2xl font-bold text-white">{user?.level || '‡∂Ü‡∂ª‡∂∏‡∑ä‡∂∑‡∂ö'}</div>
                  <div className="text-white/60 text-sm">‡∂∏‡∂ß‡∑ä‡∂ß‡∂∏</div>
                </div>
                <div className="bg-white/10 rounded-lg p-4 text-center">
                  <div className="text-2xl font-bold text-white">{gameHistory.length}</div>
                  <div className="text-white/60 text-sm">‡∂ö‡∑ä‚Äç‡∂ª‡∑ì‡∂©‡∑è ‡∑É‡∑ê‡∑É‡∑í</div>
                </div>
              </div>
            </div>

            {/* Achievements */}
            {user?.achievements && user.achievements.length > 0 && (
              <div className="bg-white/10 backdrop-blur-sm rounded-2xl p-6">
                <h2 className="text-xl font-bold text-white mb-4">‡∂¢‡∂∫‡∂ú‡∑ä‚Äç‡∂ª‡∑Ñ‡∂´</h2>
                <div className="flex flex-wrap gap-2">
                  {user.achievements.map((achievement, index) => (
                    <span 
                      key={index}
                      className="bg-yellow-500/20 text-yellow-200 px-3 py-1 rounded-full text-sm"
                    >
                      üèÜ {achievement}
                    </span>
                  ))}
                </div>
              </div>
            )}
          </div>
        )}

        {activeTab === 'games' && (
          <div className="bg-white/10 backdrop-blur-sm rounded-2xl p-6">
            <h2 className="text-xl font-bold text-white mb-4">‡∂ö‡∑ä‚Äç‡∂ª‡∑ì‡∂©‡∑è ‡∂â‡∂≠‡∑í‡∑Ñ‡∑è‡∑É‡∂∫</h2>
            {loading ? (
              <div className="text-center py-8">
                <div className="spinner mx-auto mb-4"></div>
                <p className="text-white">‡∂ö‡∑ä‚Äç‡∂ª‡∑ì‡∂©‡∑è ‡∂Ø‡∂≠‡∑ä‡∂≠ ‡∂¥‡∑ñ‡∂ª‡∂´‡∂∫ ‡∑Ä‡∑ô‡∂∏‡∑í‡∂±‡∑ä...</p>
              </div>
            ) : gameHistory.length === 0 ? (
              <div className="text-center py-8">
                <div className="text-4xl mb-4">üéÆ</div>
                <p className="text-white">‡∂≠‡∑Ä‡∂∏ ‡∂ö‡∑ä‚Äç‡∂ª‡∑ì‡∂©‡∑è ‡∂ö‡∂ª ‡∂±‡∑ê‡∂≠</p>
              </div>
            ) : (
              <div className="space-y-4 max-h-96 overflow-y-auto">
                {gameHistory.map((game, index) => (
                  <div key={index} className="bg-white/10 rounded-lg p-4">
                    <div className="flex justify-between items-start mb-2">
                      <div>
                        <h3 className="font-bold text-white">{getGameTypeInSinhala(game.gameType)}</h3>
                        <p className="text-white/60 text-sm">
                          {new Date(game.timestamp).toLocaleDateString('si-LK')} - {new Date(game.timestamp).toLocaleTimeString('si-LK')}
                        </p>
                      </div>
                      <div className="text-right">
                        <div className="text-yellow-300 font-bold">{game.score} ‡∂Ω‡∂ö‡∑î‡∂´‡∑î</div>
                        {game.accuracy && (
                          <div className="text-white/60 text-sm">{game.accuracy.toFixed(1)}% ‡∂±‡∑í‡∂ª‡∑Ä‡∂Ø‡∑ä‚Äç‡∂∫‡∂≠‡∑è‡∑Ä</div>
                        )}
                      </div>
                    </div>
                    {game.duration && (
                      <div className="text-white/60 text-sm">
                        ‡∂ö‡∑è‡∂Ω‡∂∫: {Math.round(game.duration / 1000)} ‡∂≠‡∂≠‡∑ä‡∂¥‡∂ª
                      </div>
                    )}
                  </div>
                ))}
              </div>
            )}
          </div>
        )}

        {activeTab === 'recommendations' && (
          <div className="bg-white/10 backdrop-blur-sm rounded-2xl p-6">
            <h2 className="text-xl font-bold text-white mb-4">‡∂ú‡∑î‡∂ª‡∑î ‡∂±‡∑í‡∂ª‡∑ä‡∂Ø‡∑ö‡∑Å</h2>
            <div className={`mb-6 p-4 rounded-lg bg-${riskLevel.color}-500/20 border border-${riskLevel.color}-500/50`}>
              <h3 className="font-bold text-white mb-2">‡∂Ö‡∑Ä‡∂Ø‡∑è‡∂±‡∂∏‡∑ä ‡∂∏‡∂ß‡∑ä‡∂ß‡∂∏: {riskLevel.text}</h3>
              <p className="text-white/80 text-sm">
                {riskLevel.level === 'high' && '‡∂∏‡∑ô‡∂∏ ‡∑Ö‡∂∏‡∂∫‡∑è‡∂ß ‡∑Ä‡∑í‡∑Å‡∑ö‡∑Ç ‡∂Ö‡∑Ä‡∂∞‡∑è‡∂±‡∂∫ ‡∑É‡∑Ñ ‡∑É‡∑Ñ‡∑è‡∂∫ ‡∂Ö‡∑Ä‡∑Å‡∑ä‚Äç‡∂∫‡∂∫‡∑í.'}
                {riskLevel.level === 'medium' && '‡∂∏‡∑ô‡∂∏ ‡∑Ö‡∂∏‡∂∫‡∑è‡∂ß ‡∂Ö‡∂∏‡∂≠‡∂ª ‡∑É‡∑Ñ‡∑è‡∂∫ ‡∂¥‡∑ä‚Äç‡∂ª‡∂∫‡∑ù‡∂¢‡∂±‡∑Ä‡∂≠‡∑ä ‡∑Ä‡∑ö.'}
                {riskLevel.level === 'low' && '‡∂∏‡∑ô‡∂∏ ‡∑Ö‡∂∏‡∂∫‡∑è ‡∑Ñ‡∑ú‡∂≥ ‡∂¥‡∑ä‚Äç‡∂ª‡∂ú‡∂≠‡∑í‡∂∫‡∂ö‡∑ä ‡∂¥‡∑ô‡∂±‡∑ä‡∑Ä‡∂∫‡∑í.'}
                {riskLevel.level === 'unknown' && '‡∑Ä‡∑ê‡∂©‡∑í ‡∂ö‡∑ä‚Äç‡∂ª‡∑ì‡∂©‡∑è ‡∂Ø‡∂≠‡∑ä‡∂≠ ‡∂Ö‡∑Ä‡∑Å‡∑ä‚Äç‡∂∫‡∂∫‡∑í.'}
              </p>
            </div>
            
            <div className="space-y-3">
              <h4 className="font-bold text-white">‡∂±‡∑í‡∂ª‡∑ä‡∂Ø‡∑ö‡∑Å‡∑í‡∂≠ ‡∂ö‡∑ä‚Äç‡∂ª‡∑í‡∂∫‡∑è‡∂∏‡∑è‡∂ª‡∑ä‡∂ú:</h4>
              <ul className="space-y-2">
                {getRecommendations(riskLevel).map((recommendation, index) => (
                  <li key={index} className="flex items-start gap-3 text-white/80">
                    <span className="text-green-400 mt-1">‚Ä¢</span>
                    <span>{recommendation}</span>
                  </li>
                ))}
              </ul>
            </div>

            {/* Contact Parents Button */}
            <div className="mt-6 pt-6 border-t border-white/20">
              <button className="bg-blue-600 hover:bg-blue-700 text-white px-6 py-3 rounded-full font-bold transition-colors duration-300">
                üìû ‡∂Ø‡∑ô‡∂∏‡∑è‡∂¥‡∑í‡∂∫‡∂±‡∑ä ‡∑É‡∂∏‡∑ä‡∂∂‡∂±‡∑ä‡∂∞ ‡∂ö‡∂ª‡∂ú‡∂±‡∑ä‡∂±
              </button>
            </div>
          </div>
        )}
      </div>
    </div>
  );
};

export default AdminUserProfile;